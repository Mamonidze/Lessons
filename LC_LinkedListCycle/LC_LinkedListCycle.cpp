
 struct ListNode {
     int val;
     ListNode *next;
     ListNode(int x) : val(x), next(nullptr) {}
  };

class Solution {
public:
    bool hasCycle(ListNode *head) {
        if (!head || !head->next) return false;  // –ø—É—Å—Ç–æ–π –∏–ª–∏ 1 —ç–ª–µ–º–µ–Ω—Ç ‚Üí —Ü–∏–∫–ª–∞ –Ω–µ—Ç

        ListNode* slow = head;
        ListNode* fast = head;

        while (fast && fast->next) {
            slow = slow->next;           // üê¢ –¥–≤–∏–≥–∞–µ—Ç—Å—è –Ω–∞ 1
            fast = fast->next->next;     // üêá –¥–≤–∏–≥–∞–µ—Ç—Å—è –Ω–∞ 2

            if (slow == fast) return true;  // –≤—Å—Ç—Ä–µ—Ç–∏–ª–∏—Å—å ‚Üí —Ü–∏–∫–ª –Ω–∞–π–¥–µ–Ω
        }

        return false;  // –¥–æ—à–ª–∏ –¥–æ –∫–æ–Ω—Ü–∞ ‚Üí —Ü–∏–∫–ª–∞ –Ω–µ—Ç
    }
};


int main(int argc, char* argv[])
{
    
    return 0;
}
